
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  RDM_REF: 2020.3
  VERSION: 2020.3.0
  PYTHON_VERSION: 3.8
  GIT_REF: 2020

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2.2.0
      with:
        repository: uglide/RedisDesktopManager
        path: rdm
        submodules: 'recursive'
        ref: ${{ env.RDM_REF }}
    # install python3  
    - name: install Python3
      uses: actions/setup-python@v2
      with:
        python-version: '${{ env.PYTHON_VERSION }}'
    # pip install 
    - name: pip install
      run: |
        cd rdm
        mkdir -p bin/osx/release && cd bin/osx/release
        cp -Rf $GITHUB_WORKSPACE/rdm/src/py .
        cd py
        echo six >> requirements.txt
        sudo pip3 install -t . -r requirements.txt
        sudo python3 -m compileall -b .
        sudo find . -name "*.py" | sudo xargs rm -rf
        sudo find . -name "__pycache__" | sudo xargs rm -rf
        sudo find . -name "*.dist-info" | sudo xargs rm -rf
        sudo find . -name "*.egg-info" | sudo xargs rm -rf
    # install QT   
    - name: install QT
      uses: jurplel/install-qt-action@v2.6.3
      with: 
        modules: 'qtcharts'
        version: '5.13.2'
    - name: release translations
      run: |
        cd rdm/src
        lupdate rdm.pro
        lrelease -verbose rdm.pro
    - name: build
      id: build
      run: |
        python ./rdm/build/utils/set_version.py ${{ env.VERSION }} > ./rdm/src/version.h
        cd rdm/src
        qmake rdm.pro CONFIG-=debug
        make -s -j 8
    - name: copy translations
      run: |
        cd rdm/src
        mkdir ../bin/osx/release/Redis\ Desktop\ Manager.app/Contents/translations
        cp -f ./resources/translations/*.qm ../bin/osx/release/Redis\ Desktop\ Manager.app/Contents/translations
    - name: package
      id: package
      run: |
        cd rdm/bin/osx/release
        zip -q -r release.zip .
        cp -Rf py ./Redis\ Desktop\ Manager.app/Contents/Resources/
        otool -L ./Redis\ Desktop\ Manager.app/Contents/MacOS/Redis\ Desktop\ Manager
        macdeployqt ./Redis\ Desktop\ Manager.app -qmldir=../../../src/qml -always-overwrite -dmg
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: rdm/bin/osx/release/Redis Desktop Manager.dmg
        asset_name: 'Redis Desktop Manager.dmg'
        asset_content_type: application/dmg
